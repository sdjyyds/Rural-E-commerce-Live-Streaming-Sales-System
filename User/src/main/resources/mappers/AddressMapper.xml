<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdjyyds.user.dao.AddressDao">

    <resultMap id="BaseResultMap" type="com.sdjyyds.user.entity.Address">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="recipient_name" property="recipientName" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="district" property="district" jdbcType="VARCHAR"/>
        <result column="detail_address" property="detailAddress" jdbcType="VARCHAR"/>
        <result column="is_default" property="isDefault" jdbcType="BOOLEAN"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insert" parameterType="com.sdjyyds.user.entity.Address" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO addresses (id,user_id, recipient_name, phone, province, city, district, detail_address, is_default, created_at, updated_at)
        VALUES (#{id},#{userId}, #{recipientName}, #{phone}, #{province}, #{city}, #{district}, #{detailAddress}, #{isDefault}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="update" parameterType="com.sdjyyds.user.entity.Address">
        UPDATE addresses
        <set>
            <if test="recipientName != null">recipient_name = #{recipientName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="province != null">province = #{province},</if>
            <if test="city != null">city = #{city},</if>
            <if test="district != null">district = #{district},</if>
            <if test="detailAddress != null">detail_address = #{detailAddress},</if>
            <if test="isDefault != null">is_default = #{isDefault},</if>
            updated_at = #{updatedAt}
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM addresses WHERE id = #{id}
    </delete>
    <select id="findByUserIdAndIsDefault" resultMap="BaseResultMap">
        select * from addresses where user_id = #{userId} and is_default = #{isDefault}
    </select>
    <select id="findByIdAndUserId" resultMap="BaseResultMap">
        SELECT * FROM addresses WHERE id = #{id} AND user_id = #{userId}
    </select>

    <select id="findByUserId" resultMap="BaseResultMap">
        SELECT * FROM addresses WHERE user_id = #{userId} ORDER BY is_default DESC, updated_at DESC
    </select>

    <select id="existsByIdAndUserId" resultType="boolean">
        SELECT COUNT(1) > 0 FROM addresses WHERE id = #{id} AND user_id = #{userId}
    </select>

    <update id="clearDefaultAddress">
        UPDATE addresses SET is_default = false, updated_at = NOW() WHERE user_id = #{userId} AND is_default = true
    </update>
</mapper>